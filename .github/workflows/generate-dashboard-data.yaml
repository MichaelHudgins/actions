# Workflow to continuously regenerate the data for the ci dashboard
name: Generate dashboard data
# Run on pull_request that is labeled as "optional_ci_tpu" or workflow dispatch
on:
  pull_request:
    paths:
      - ci_dashboard/data_query/**
      - .github/workflows/generate-dashboard-data.yaml
    branches:
      - main
jobs:
  generate-json:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: 1.24.0
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      # Get values for cache paths to be used in later steps
      - id: cache-paths
        run: |
          echo "go-cache=$(go env GOCACHE)" >> $GITHUB_OUTPUT
          echo "go-mod-cache=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT
      - name: Cache go modules
        uses: actions/cache@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: |
            ${{ steps.cache-paths.outputs.go-cache }}
            ${{ steps.cache-paths.outputs.go-mod-cache }}
          key: ubuntu-latest-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ubuntu-latest-go-
      - name: Run the data generation
        env:
          GITHUB_REPOSITORY_OWNER: jax-ml
          GITHUB_REPOSITORY_NAME: jax
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd ci_dashboard/data_query
          go run main.go
      - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # ratchet:actions/upload-artifact@v4
        with:
          name: workflow-run-main
          path: ci_dashboard/data_query/workflow_runs.json
  upload-site:
    # if: github.event_name == 'schedule'
    needs: generate-json
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Download workflow files
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # ratchet:actions/download-artifact@v4
        with:
          path: data
          pattern: workflow-run-*
          merge-multiple: true
      - name: Arrange site
        run: |
          ls -la
          mkdir final_site
          mkdir final_site/data
          cp data/* final_site/data/
          ls -la final_site/data/
      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # or specific "vX.X.X" version tag for this action ratchet:actions/upload-pages-artifact@v3
        with:
          path: final_site/
    # - name: Deploy to GitHub Pages
    #   id: deployment
    #   uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # ratchet:actions/deploy-pages@v4





